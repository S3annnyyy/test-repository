name: Notify Slack after all workflows complete

on:
  workflow_run:
    workflows:
      - CI and Super Linter
      - Notify Slack on Action Outcome
    types:
      - completed

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Get workflow runs
        id: get-workflows
        uses: actions/github-script@v6
        with:
          script: |
            const workflowNames = [
              'CI and Super Linter',
              'Notify Slack on Action Outcome'
            ];
            
            let workflowStatuses = [];
            
            for (const name of workflowNames) {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: name,
                per_page: 1
              });
              
              if (runs.data.workflow_runs.length > 0) {
                const run = runs.data.workflow_runs[0];
                workflowStatuses.push({
                  name: name,
                  conclusion: run.conclusion
                });
              }
            }
            
            return workflowStatuses;

      - name: Prepare Slack message
        id: slack-message
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          WORKFLOW_RESULTS="${{ steps.get-workflows.outputs.result }}"
          
          # Initialize variables
          ALL_PASSED=true
          STATUS_MESSAGE=""
          
          # Process each workflow status
          echo "$WORKFLOW_RESULTS" | jq -c '.[]' | while read -r workflow; do
            name=$(echo "$workflow" | jq -r '.name')
            status=$(echo "$workflow" | jq -r '.conclusion')
            
            if [ "$status" == "success" ]; then
              icon="✅"
            else
              icon="❌"
              ALL_PASSED=false
            fi
            
            STATUS_MESSAGE="$STATUS_MESSAGE\n*$name*: $status $icon"
          done
          
          # Extract GitHub context information
          REPO_NAME=$(echo $GITHUB_CONTEXT | jq -r '.repository')
          BRANCH=$(echo $GITHUB_CONTEXT | jq -r '.ref' | sed 's/refs\/heads\///')
          COMMIT=$(echo $GITHUB_CONTEXT | jq -r '.sha')
          ACTOR=$(echo $GITHUB_CONTEXT | jq -r '.actor')
          
          # Set overall status
          if [ "$ALL_PASSED" == "true" ]; then
            echo "::set-output name=overall_status::Success"
          else
            echo "::set-output name=overall_status::Failure"
          fi
          
          echo "::set-output name=status_details::$STATUS_MESSAGE"
          echo "::set-output name=repo::$REPO_NAME"
          echo "::set-output name=branch::$BRANCH"
          echo "::set-output name=commit::$COMMIT"
          echo "::set-output name=actor::$ACTOR"

      - name: Notify Slack
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            \"blocks\": [
              {
                \"type\": \"section\",
                \"text\": {
                  \"type\": \"mrkdwn\",
                  \"text\": \"*GitHub Actions: Multiple Workflow Status*\"
                }
              },
              {
                \"type\": \"section\",
                \"text\": {
                  \"type\": \"mrkdwn\",
                  \"text\": \"Overall Status: *${{ steps.slack-message.outputs.overall_status }}*\n${{ steps.slack-message.outputs.status_details }}\"
                }
              },
              {
                \"type\": \"context\",
                \"elements\": [
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \"Repository: ${{ steps.slack-message.outputs.repo }} | Branch: ${{ steps.slack-message.outputs.branch }} | Commit: ${{ steps.slack-message.outputs.commit }} | Triggered by: ${{ steps.slack-message.outputs.actor }}\"
                  }
                ]
              }
            ]
          }" ${{ secrets.SLACK_WEBHOOK_URL }}
